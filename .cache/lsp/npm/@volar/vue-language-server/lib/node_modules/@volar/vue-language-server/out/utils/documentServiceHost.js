Object.defineProperty(exports, "__esModule", { value: true });
exports.createDocumentServiceHost = void 0;
const vscode_uri_1 = require("vscode-uri");
const config_1 = require("./config");
function createDocumentServiceHost(runtimeEnv, languageConfigs, ts, configHost) {
    const workspaceServices = new Map();
    const untitledService = languageConfigs.getDocumentService(ts, configHost, runtimeEnv.fileSystemProvide, [], vscode_uri_1.URI.from({ scheme: 'untitled' }));
    return {
        add,
        remove,
        get,
    };
    function add(rootUri) {
        workspaceServices.set(rootUri.toString(), languageConfigs.getDocumentService(ts, configHost, runtimeEnv.fileSystemProvide, (0, config_1.loadCustomPlugins)(rootUri.fsPath), rootUri));
    }
    function remove(rootUri) {
        workspaceServices.delete(rootUri.toString());
    }
    function get(documentUri) {
        for (const [rootUri, service] of workspaceServices) {
            if (documentUri.startsWith(rootUri)) {
                return service;
            }
        }
        return untitledService;
    }
}
exports.createDocumentServiceHost = createDocumentServiceHost;
//# sourceMappingURL=documentServiceHost.js.map